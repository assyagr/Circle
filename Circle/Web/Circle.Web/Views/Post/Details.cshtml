@using Circle.Service.Models
@model CirclePostServiceModel

@{
    var comments = (List<CommentServiceModel>)this.ViewData["Comments"];
}

@{
    ViewData["PostId"] = Model.Id;
}

<div>
    <span id="@Model.Id" class="post-id" hidden></span>
    <main class="page-post-content mt-4">
        <div class="username-buttons-container">
            @if (Model.CreatedBy.ProfilePicture == null)
            {
                <img class="user-pfp" src="~/images/no-pfp.svg">
            }
            else
            {
                <p class="user-pfp">
                    @Html.Raw(Model.CreatedBy.ProfilePicture) @*should be the pfp*@
                </p>
            }
            <a href="/Profile/UserProfile?UserName=@Model.CreatedBy.UserName" style="color:#302b36"><b>@Model.CreatedBy.UserName</b></a>
            @if (User.Identity.Name == Model.CreatedBy.UserName)
            {
                <form method="post" asp-controller="Post" asp-action="Edit" asp-route-postId="@Model.Id">
                    <button type="submit" class="btn btn-secondary btn-small">Edit</button>
                </form>
                <form method="post" asp-controller="Post" asp-action="Delete" asp-route-postId="@Model.Id">
                    <button type="submit" class="btn btn-secondary btn-small">Delete</button>
                </form>
            }
        </div>
        @if (Model.Caption != null)
        {
            <div><h6>@Model.Caption</h6></div>
        }
        <div class="visualize-tags-hashtags">
            @if (Model.Hashtags != null)
            {
                @foreach (var hashtag in Model.Hashtags)
                {
                    if (hashtag.DeletedBy == null)
                    {
                        <h7 class="page-post-content-hashtags"><i>#@hashtag.Label</i></h7>
                    }
                }
            }
        </div>
        <div class="visualize-tags-hashtags">
            @if (Model.TaggedUsers != null)
            {
                @foreach (var taggedUser in Model.TaggedUsers)
                {
                    <a href="/Profile/UserProfile?UserName=@taggedUser" style="color:grey"><h6 class="page-post-content-tagged-users">@@@taggedUser.UserName</h6></a> @*TODO add a link redirecting to tagged user's profile*@
                }
            }
        </div>
        <a class="plain-link" href="/Post/Details?postId=@Model.Id">
            <p class="page-post-content-preview mt-3">
                @Html.Raw(Model.Content) @*should be the photo/s*@
            </p>
        </a>
    </main>
    <footer class="page-post-footer d-flex justify-content-start">
        <div class="page-post-footer-reactions d-flex justify-content-start">
            <img class="mt-1" src="~/images/reaction.svg" width="20px" height="20px">
            <div class="ms-2">@Model.Reactions.Count</div>
        </div>
        <div class="page-post-footer-comments d-flex justify-content-start ms-4">
            <span class="comment-icon" onclick="toggleComments()">
                <img class="mt-1" src="~/images/comment.svg" width="20px" height="20px">
            </span>
            <div class="ms-2">@Model.Comments.Count</div>
        </div>
        <div class="page-post-footer-share ms-4">
            <img src="~/images/share.svg" width="20px" height="20px">
        </div>
        <div>
            <div class="page-post-heading-timestamp ms-3 mt-1">@Model.CreatedOn.ToString("dd/MM/yyyy HH:mm")</div>
        </div>
    </footer>
    <div id="all-comments" class="hidden-comments">
        @if (comments != null)
        {
            @foreach (var comment in comments)
            {
                @Html.Partial("_PartialComment", comment)
            }
        }
    </div>
</div>

<div class="comment-input-field">
    <form asp-controller="Post" asp-action="Comment" asp-route-postId="@Model.Id" onsubmit="return validateCommentForm()">
        <input class="form-control oval-comment-input" id="comment-input" name="commentText" rows="1" placeholder="Comment?" oninput="showCommentButton()" />
        <button type="submit" class="hidden-comment-button" id="add-comment-button">Comment</button>
        <span id="error-message" style="color: red; display: none;">Comment cannot be empty!</span>
    </form>
</div>

<script>

    //comments
    function validateCommentForm()
    {
        var commentInput = document.getElementById("comment-input").value.trim();
        var errorMessage = document.getElementById("error-message");

        if (commentInput == "") {
            errorMessage.style.display = "block";
            return false;
        }

        errorMessage.style.display = "none";
        return true;
    }

    function toggleComments()
    {
        let comments = document.getElementById("all-comments");
        comments.classList.toggle("visible-comments");
    }

    function showCommentButton()
    {
        var input = document.getElementById("comment-input").value.trim();
        var button = document.getElementById("add-comment-button");

        if (input.length > 0) 
        {
            button.classList.remove("hidden-comment-button");
        } else 
        {
            button.classList.add("hidden-comment-button");
        }
    }
</script>